#ifndef __NPUPP_RPC_H__
#define __NPUPP_RPC_H__

#define S_OK 0x10000000

typedef struct _tagRingBufferHeader {
	unsigned int magic;	//Magic number
	unsigned int beginAddr;
	unsigned int size;
	unsigned int bufferID;	// RINGBUFFER_TYPE, choose a type from RINGBUFFER_TYPE

	unsigned int writePtr;
	unsigned int numOfReadPtr;
	unsigned int reserve2;	//Reserve for Red Zone
	unsigned int reserve3;	//Reserve for Red Zone

	unsigned int readPtr[4];

	int fileOffset;
	int requestedFileOffset;
	int fileSize;

	int bSeekable;		/* Can't be sought if data is streamed by HTTP */
} RINGBUFFER_HEADER;

enum ENUM_AUDIO_KERNEL_RPC_CMD {
	ENUM_KERNEL_RPC_CREATE_AGENT,
	ENUM_KERNEL_RPC_INIT_RINGBUF,
	ENUM_KERNEL_RPC_PRIVATEINFO,
	ENUM_KERNEL_RPC_RUN,
	ENUM_KERNEL_RPC_PAUSE,
	ENUM_KERNEL_RPC_SWITCH_FOCUS,
	ENUM_KERNEL_RPC_MALLOC_ADDR,
	ENUM_KERNEL_RPC_VOLUME_CONTROL,
	ENUM_KERNEL_RPC_FLUSH,
	ENUM_KERNEL_RPC_CONNECT,
	ENUM_KERNEL_RPC_SETREFCLOCK,
	ENUM_KERNEL_RPC_DAC_I2S_CONFIG,
	ENUM_KERNEL_RPC_DAC_SPDIF_CONFIG,
	ENUM_KERNEL_RPC_HDMI_OUT_EDID,
	ENUM_KERNEL_RPC_HDMI_OUT_EDID2,
	ENUM_KERNEL_RPC_HDMI_SET,
	ENUM_KERNEL_RPC_HDMI_MUTE,
	ENUM_KERNEL_RPC_ASK_DBG_MEM_ADDR,
	ENUM_KERNEL_RPC_DESTROY,
	ENUM_KERNEL_RPC_STOP,
	ENUM_KERNEL_RPC_CHECK_READY,
	ENUM_KERNEL_RPC_GET_MUTE_N_VOLUME,
	ENUM_KERNEL_RPC_EOS,
	ENUM_KERNEL_RPC_ADC0_CONFIG,
	ENUM_KERNEL_RPC_ADC1_CONFIG,
	ENUM_KERNEL_RPC_ADC2_CONFIG,
	ENUM_KERNEL_RPC_HDMI_OUT_VSDB,
	ENUM_VIDEO_KERNEL_RPC_CONFIG_TV_SYSTEM,
	ENUM_VIDEO_KERNEL_RPC_CONFIG_HDMI_INFO_FRAME,
	ENUM_VIDEO_KERNEL_RPC_QUERY_DISPLAY_WIN,
	ENUM_VIDEO_KERNEL_RPC_PP_INIT_PIN,
	ENUM_KERNEL_RPC_INIT_RINGBUF_AO,
	ENUM_VIDEO_KERNEL_RPC_VOUT_EDID_DATA,
	ENUM_KERNEL_RPC_AUDIO_POWER_SET,
	ENUM_VIDEO_KERNEL_RPC_VOUT_VDAC_SET,
	ENUM_VIDEO_KERNEL_RPC_QUERY_CONFIG_TV_SYSTEM,
	ENUM_KERNEL_RPC_AUDIO_CONFIG,
	ENUM_KERNEL_RPC_AIO_PRIVATEINFO,
	ENUM_KERNEL_RPC_QUERY_FW_DEBUG_INFO,
	ENUM_KERNEL_RPC_HDMI_RX_LATENCY_MEM,
	ENUM_KERNEL_RPC_EQ_CONFIG,
	ENUM_VIDEO_KERNEL_RPC_CREATE,
	ENUM_VIDEO_KERNEL_RPC_DISPLAY,
	ENUM_VIDEO_KERNEL_RPC_CONFIGUREDISPLAYWINDOW,
	ENUM_VIDEO_KERNEL_RPC_SETREFCLOCK,
	ENUM_VIDEO_KERNEL_RPC_RUN,
	ENUM_VIDEO_KERNEL_RPC_INITRINGBUFFER,
	ENUM_VIDEO_KERNEL_RPC_SETRESCALEMODE,
	ENUM_VIDEO_KERNEL_RPC_SET_HDMI_VRR,
	ENUM_VIDEO_KERNEL_RPC_CONFIGURE_GRAPHIC_CANVAS,
	ENUM_VIDEO_KERNEL_RPC_SET_MIXER_ORDER,
	ENUM_KERNEL_RPC_DEC_PRIVATEINFO,
	ENUM_KERNEL_RPC_ALSA_FASTER,
	ENUM_VIDEO_KERNEL_RPC_PAUSE,
	ENUM_VIDEO_KERNEL_RPC_STOP,
	ENUM_VIDEO_KERNEL_RPC_DESTROY,
	ENUM_VIDEO_KERNEL_RPC_FLUSH,
	ENUM_VIDEO_KERNEL_RPC_Q_PARAMETER,
	ENUM_VIDEO_KERNEL_RPC_CONFIGCHANNELLOWDELAY,
	ENUM_VIDEO_KERNEL_RPC_PRIVATEINFO,
	ENUM_VIDEO_KERNEL_RPC_QUERYDISPLAYWINNEW,
	ENUM_VIDEO_KERNEL_RPC_SETSPEED,
	ENUM_VIDEO_KERNEL_RPC_SETBACKGROUND,
	ENUM_VIDEO_KERNEL_RPC_KEEPCURPIC,
	ENUM_VIDEO_KERNEL_RPC_KEEPCURPIC_FW_MALLOC,
	ENUM_VIDEO_KERNEL_RPC_KEEPCURPICSVP,
	ENUM_VIDEO_KERNEL_RPC_SET_DEINTFLAG,
	ENUM_VIDEO_KERNEL_RPC_CREATEGRAPHICWINDOW,
	ENUM_VIDEO_KERNEL_RPC_DRAWGRAPHICWINDOW,
	ENUM_VIDEO_KERNEL_RPC_MODIFYGRAPHICWINDOW,
	ENUM_VIDEO_KERNEL_RPC_DELETEGRAPHICWINDOW,
	ENUM_VIDEO_KERNEL_RPC_CONFIGUREOSDPALETTE,
	ENUM_VIDEO_KERNEL_RPC_PMIXER_CONFIGUREPLANEMIXER,
	ENUM_VIDEO_KERNEL_RPC_SET_DISPLAY_OUTPUT_FORMAT,
	ENUM_VIDEO_KERNEL_RPC_GET_DISPLAY_OUTPUT_FORMAT,
	ENUM_VIDEO_KERNEL_RPC_SET_ENHANCEDSDR,
	ENUM_KERNEL_RPC_HDMI_EDID_RAW_DATA,
	ENUM_VIDEO_KERNEL_RPC_ConfigWriteBackFlow,
	ENUM_VIDEO_KERNEL_RPC_NPP_Init,
	ENUM_VIDEO_KERNEL_RPC_NPP_Destroy,
};

enum VIDEO_VF_TYPE {
	VF_TYPE_VIDEO_MPEG2_DECODER = 0,
	VF_TYPE_VIDEO_MPEG4_DECODER = 1,
	VF_TYPE_VIDEO_DV_DECODER = 2,
	VF_TYPE_VIDEO_H263_DECODER = 3,
	VF_TYPE_VIDEO_H264_DECODER = 4,
	VF_TYPE_VIDEO_VC1_DECODER = 5,
	VF_TYPE_VIDEO_REAL_DECODER = 6,
	VF_TYPE_VIDEO_JPEG_DECODER = 7,
	VF_TYPE_VIDEO_MJPEG_DECODER = 8,
	VF_TYPE_SPU_DECODER = 9,
	VF_TYPE_VIDEO_OUT = 10,
	VF_TYPE_TRANSITION = 11,
	VF_TYPE_THUMBNAIL = 12,
	VF_TYPE_VIDEO_VP6_DECODER = 13,
	VF_TYPE_VIDEO_IMAGE_DECODER = 14,
	VF_TYPE_FLASH = 15,
	VF_TYPE_VIDEO_AVS_DECODER = 16,
	VF_TYPE_MIXER = 17,
	VF_TYPE_VIDEO_VP8_DECODER = 18,
	VF_TYPE_VIDEO_WMV7_DECODER = 19,
	VF_TYPE_VIDEO_WMV8_DECODER = 20,
	VF_TYPE_VIDEO_RAW_DECODER = 21,
	VF_TYPE_VIDEO_THEORA_DECODER = 22,
	VF_TYPE_VIDEO_FJPEG_DECODER = 23,
	VF_TYPE_VIDEO_H265_DECODER = 24,
	VF_TYPE_VIDEO_VP9_DECODER = 25,
	VF_TYPE_VIDEO_H264lv51_DECODER = 26,
	VF_TYPE_VIDEO_CAPTURER = 27,
	VF_TYPE_RAWCONV = 28,
	VF_TYPE_TVD = 29,
	VF_TYPE_VIDEO_ENCODER = 30,
	VF_TYPE_VIDEO_SPLITTER = 31,
	VF_TYPE_VIDEO_AVS2_DECODER = 32,
	VF_TYPE_VIDEO_AV1_DECODER = 33,
};

typedef enum VIDEO_VF_TYPE VIDEO_VF_TYPE;

enum ENUM_WRITEBACK_TYPE {
	BACKGROUND_V1 = 0,
	BACKGROUND_V2 = 1,
	VSYNC_MIXER1 = 2,
	VSYNC_MIXER2 = 3,
	VSYNC_V1 = 4,
	BACKGROUND_NPU_PP = 5,
	VSYNC_V1_NPU_PP = 6,
};

typedef enum ENUM_WRITEBACK_TYPE ENUM_WRITEBACK_TYPE;

#endif
